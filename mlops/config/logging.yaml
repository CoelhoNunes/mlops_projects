version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"
  
  json:
    format: '{"timestamp": "%(asctime)s", "logger": "%(name)s", "level": "%(levelname)s", "message": "%(message)s", "module": "%(module)s", "function": "%(funcName)s", "line": "%(lineno)d"}'
    datefmt: "%Y-%m-%dT%H:%M:%S"
  
  detailed:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: ./logs/mlops.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: ./logs/errors.log
    maxBytes: 10485760  # 10MB
    backupCount: 3
    encoding: utf8
  
  json_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: ./logs/structured.log
    maxBytes: 10485760  # 10MB
    backupCount: 3
    encoding: utf8

loggers:
  # Root logger
  "":
    level: INFO
    handlers: [console, file, error_file]
    propagate: false
  
  # MLOps specific loggers
  mlops:
    level: DEBUG
    handlers: [console, file, error_file, json_file]
    propagate: false
  
  mlops.data:
    level: DEBUG
    handlers: [console, file, json_file]
    propagate: false
  
  mlops.modeling:
    level: DEBUG
    handlers: [console, file, json_file]
    propagate: false
  
  mlops.serving:
    level: INFO
    handlers: [console, file, json_file]
    propagate: false
  
  mlops.utils:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  # Third-party library loggers
  mlflow:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  optuna:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  torch:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  sklearn:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  pandas:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  numpy:
    level: WARNING
    handlers: [console, file]
    propagate: false
  
  # FastAPI and Uvicorn
  fastapi:
    level: INFO
    handlers: [console, file, json_file]
    propagate: false
  
  uvicorn:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  uvicorn.access:
    level: WARNING
    handlers: [console, file]
    propagate: false

# Root logger configuration
root:
  level: INFO
  handlers: [console, file, error_file]
