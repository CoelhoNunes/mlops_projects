# MLOps Training Dockerfile
# Multi-stage build for training service with GPU support

# Use CUDA base for GPU training (comment out for CPU-only)
FROM nvidia/cuda:11.8-devel-ubuntu20.04 as cuda-base
# FROM python:3.11-slim as base  # Uncomment for CPU-only

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV CUDA_VISIBLE_DEVICES=0

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Python
RUN wget https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tgz \
    && tar xzf Python-3.11.0.tgz \
    && cd Python-3.11.0 \
    && ./configure --enable-optimizations \
    && make altinstall \
    && ln -sf /usr/local/bin/python3.11 /usr/local/bin/python \
    && ln -sf /usr/local/bin/pip3.11 /usr/local/bin/pip

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY pyproject.toml .
COPY README.md .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -e .

# Copy source code
COPY mlops/ ./mlops/
COPY tests/ ./tests/

# Create non-root user
RUN useradd --create-home --shell /bin/bash mlops \
    && chown -R mlops:mlops /app
USER mlops

# Set Python path
ENV PYTHONPATH=/app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import mlops; print('Training service healthy')" || exit 1

# Default command
CMD ["python", "-m", "mlops.orchestration.cli", "train"]

# Build stage for production (CPU-only, smaller image)
FROM python:3.11-slim as production

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy from build stage
COPY --from=cuda-base /app /app
COPY --from=cuda-base /usr/local /usr/local

# Create non-root user
RUN useradd --create-home --shell /bin/bash mlops \
    && chown -R mlops:mlops /app
USER mlops

# Set Python path
ENV PYTHONPATH=/app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import mlops; print('Training service healthy')" || exit 1

# Default command
CMD ["python", "-m", "mlops.orchestration.cli", "train"]
