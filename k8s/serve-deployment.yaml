apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-serving-deployment
  labels:
    app: mlops
    component: serving
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlops
      component: serving
  template:
    metadata:
      labels:
        app: mlops
        component: serving
    spec:
      containers:
      - name: server
        image: mlops-server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        - name: PORT
          value: "8000"
        - name: HOST
          value: "0.0.0.0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
            # Uncomment for GPU inference
            # nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: artifacts-volume
          mountPath: /app/artifacts
        - name: mlflow-volume
          mountPath: /app/mlruns
      volumes:
      - name: artifacts-volume
        persistentVolumeClaim:
          claimName: mlops-artifacts-pvc
      - name: mlflow-volume
        persistentVolumeClaim:
          claimName: mlflow-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mlops-serving-service
  labels:
    app: mlops
    component: serving
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: mlops
    component: serving
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mlops-serving-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mlops-serving-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
# Ingress (if using ingress controller)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mlops-serving-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: mlops.example.com  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mlops-serving-service
            port:
              number: 80
